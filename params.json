{"name":"Adauth","tagline":"Active Directory Interaction for Ruby","body":"## Install\r\n\r\nAdd the Adauth gem to your Gemfile:\r\n\r\n    gem 'adauth'\r\n\r\nand run a bundle install\r\n\r\n## Usage\r\n\r\n### In Rails\r\n\r\nFirst off create a new config file by running the config generator\r\n\r\n    rails g adauth:config\r\n\r\nFill out the config values in _config/initializers/adauth.rb_\r\n\r\n#### Joining a model to Adauth\r\n\r\nIf you want to link your user model to Adauth you can use this simple code:\r\n\r\n    class User < ActiveRecord::Base\r\n\t\tinclude Adauth::Rails::ModelBridge\r\n\t\t\r\n\t\tAdauthMappings = {\r\n\t\t\t:login => :login\r\n\t\t\t:group_strings => :cn_groups\r\n\t\t}\r\n\t\t\r\n\t\tAdauthSearchField = [:login, :login]\r\n\tend\r\n\t\r\nThis gives you a bridge between Adauth and your model. When you call `User.create_from_adauth(adauth_model)` it does:\r\n\r\n    u = User.new\r\n    u.login = adauth_model.login\r\n\tu.group_strings = adauth_model.cn_groups\r\n\tu.save\r\n\t\r\nThis can be used for any model and anything that you pull over through adauth.\r\n\r\n#### SessionsController\r\n\r\nYou can use a premade sessions controller by running\r\n\r\n    rails g adauth:sessions\r\n\t\r\nWhich adds a couple of routes, a sessions controller and a login form. To login go to _/sessions/new_ and fill out the form, you will then POST to _/adauth_ and if succesful you will be sent back to _root_path_\r\n\r\n### In Scripts\r\n\r\nTo use Adauth in a script or other program just call `Adauth.configure` somewhere at the begining of the script, once configured Adauth can be used anywhere in your program the same as rails.\r\n\r\n## Configuring\r\n\r\nAdauth has a few configuration options which are described in detail on the [wiki](https://github.com/Arcath/Adauth/wiki/Configuring).\r\n\r\n## Logs\r\n\r\nAdauth logs to weekly logs in logs/adauth.log(.DATE)\r\n\r\nYou can interact with the logger through `Adauth.logger` and set a new one using `Adauth.logger=`\r\n\r\n## Developing\r\n\r\nBefore you can run the tests you will need to write a yml file with your domain settings in and place it at _spec/test_data.yml_, there is an example of this file in the spec folder.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}